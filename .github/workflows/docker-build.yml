name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - master
      - develop
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  DOCKER_USERNAME: collins137
  IMAGE_NAME: collins137/cc_studio

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    
    steps:
      - name: Prepare platform tag
        id: platform
        run: |
          platform=${{ matrix.platform }}
          echo "tag=${platform//\//-}" >> $GITHUB_OUTPUT
          
      - name: Free up disk space
        run: |
          echo "Disk space before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          echo "Disk space after cleanup:"
          df -h
          
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ steps.platform.outputs.tag }}
          cache-to: type=gha,mode=max,scope=${{ steps.platform.outputs.tag }}
          platforms: ${{ matrix.platform }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          provenance: false
          
      - name: Image digest
        run: echo ${{ steps.meta.outputs.digest }}
        
      - name: Update Docker Hub description
        if: matrix.platform == 'linux/amd64'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ env.IMAGE_NAME }}
          short-description: "Color Correction Studio - ML-based Image Processing"
          readme-filepath: ./README.md
        continue-on-error: true
